{"version":3,"sources":["core/state.ts","core/utils.ts","content.json","core/input.ts","core/gui.ts","../node_modules/stats.js/build/stats.min.js","core/entities/fish.ts","core/entities/penguin.ts","core/entities/player.ts","core/main.ts","core/timers.ts","index.ts"],"names":["module","exports","real_news","title","content","theme","fake","fake_news"],"mappings":"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","file":"src.d7e5bc68.js","sourceRoot":"..\\src","sourcesContent":["import { Penguin } from './entities/penguin';\r\nimport { Fish } from './entities/fish';\r\nimport { Player } from './entities/player';\r\nimport { Speach } from './entities/speach';\r\n\r\n/**\r\n * Possible post themes\r\n */\r\ntype Theme = 'politics' | 'gaming' | 'music' | 'films' | 'educational' | 'sports';\r\n\r\n/**\r\n * Sctructure of the news post\r\n */\r\ninterface NewsBlock {\r\n\ttitle: string;\r\n    content: string;\r\n\ttheme: Theme;\r\n\tfake: boolean;\r\n}\r\n\r\n/**\r\n * State of the game\r\n */\r\nexport interface GameState {\r\n\tpaused: boolean;\r\n\telement: HTMLCanvasElement;\r\n    ctx: CanvasRenderingContext2D;\r\n\r\n\tmouseX: number;\r\n\tmouseY: number;\r\n\tmouseDown: boolean;\r\n\r\n\tpenguins: Array<Penguin | Player>;\r\n    entities: Array<Fish | Speach>;\r\n\tstarted: boolean;\r\n\r\n\tfish: number;\r\n\trelevance: number;\r\n\t\r\n\tnews: NewsBlock[];\r\n\tnewsIndex: number;\r\n\tselectedNewsIndex: number;\r\n}\r\n\r\n/**\r\n * Global state manager\r\n * @param initial Initial state. Will be used if state initialized for the first time.\r\n */\r\nexport function State(initial?: GameState): GameState {\r\n\tconst global: any = window;\r\n\r\n\tif (typeof global.__GameState__ !== 'object') {\r\n\t\tglobal.__GameState__ = initial ? initial : {};\r\n\t}\r\n\r\n\treturn global.__GameState__;\r\n}\r\n","/**\r\n * Linear interpolation function\r\n * @param v0 Range start\r\n * @param v1 Range end\r\n * @param t Position in range ( from 0 to 1 )\r\n */\r\nexport function lerp(v0: number, v1: number, t: number): number {\r\n\treturn v0 * (1 - t) + v1 * t;\r\n}\r\n\r\n/**\r\n * Load image\r\n * @param src Image path\r\n */\r\nexport function loadImage(src: string): HTMLImageElement {\r\n\tconst image = new Image();\r\n\timage.src = src;\r\n\treturn image;\r\n}\r\n\r\n/**\r\n * Preload image\r\n * @param src Image path\r\n */\r\nexport function preloadImage(src: string): Promise<HTMLImageElement> {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tconst image = new Image();\r\n\t\timage.onload = () => resolve(image);\r\n\t\timage.src = src;\r\n\t});\r\n}\r\n\r\n/**\r\n * Sort objects by field.\r\n * @param array Array to sort\r\n * @param field To sort by\r\n */\r\nexport function insertionSort(array: object[], field: string): object[] {\r\n\tfor (let i = 0; i < array.length; i++) {\r\n\t\tconst value = array[i] as any;\r\n\r\n\t\tfor (var j = i - 1; j > -1 && array[j][field] > value[field]; j--) {\r\n\t\t\tarray[j + 1] = array[j];\r\n\t\t}\r\n\r\n\t\tarray[j + 1] = value;\r\n\t}\r\n\r\n\treturn array;\r\n}\r\n\r\n/**\r\n * Generate random integer\r\n * @param min Minimal\r\n * @param max Maximal\r\n */\r\nexport function randomInteger(min: number, max: number): number {\r\n\treturn Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\n/**\r\n * Convert value from one range to another\r\n * @param {Number} value value to convert\r\n * @param {Object} oldRange min, max of values range\r\n * @param {Object} newRange min, max of desired range\r\n * @return {Number} value converted to other range\r\n */\r\nexport function convertRange(\r\n\tvalue: number,\r\n\toldRange: { min: number; max: number },\r\n\tnewRange: { min: number; max: number }\r\n) {\r\n\treturn ((value - oldRange.min) * (newRange.max - newRange.min)) / (oldRange.max - oldRange.min) + newRange.min;\r\n}\r\n\r\n/**\r\n * Shuffle array\r\n * Taken from https://stackoverflow.com/a/2450976/7442791\r\n * @param array Array to shuffle\r\n */\r\nexport function shuffle(array: any[]): any[] {\r\n\tlet currentIndex: number = array.length;\r\n\tlet temporaryValue: number;\r\n\tlet randomIndex: number;\r\n\r\n\twhile (0 !== currentIndex) {\r\n\t\trandomIndex = Math.floor(Math.random() * currentIndex);\r\n\t\tcurrentIndex -= 1;\r\n\r\n\t\ttemporaryValue = array[currentIndex];\r\n\t\tarray[currentIndex] = array[randomIndex];\r\n\t\tarray[randomIndex] = temporaryValue;\r\n\t}\r\n\r\n\treturn array;\r\n}\r\n\r\n/**\r\n * Get index of random value from array.\r\n * @param array Array to take from.\r\n */\r\nexport function randomFromArray(array: any[]): number {\r\n\treturn Math.floor(Math.random() * array.length);\r\n}\r\n\r\n/**\r\n * Alternative to `setInterval`, but using request animation frame\r\n * @param callback Callback that will be executed after delay\r\n * @param delay Delay before executing\r\n */\r\nexport function requestInterval(callback: () => void, delay: number): (number?: number) => void {\r\n\tlet start = Date.now();\r\n\tlet canceled = false;\r\n\r\n\tfunction loop() {\r\n\t\tif (canceled) return;\r\n\r\n\t\tlet current = Date.now();\r\n\t\tlet delta = current - start;\r\n\r\n\t\tif (delta >= delay) {\r\n\t\t\tcallback();\r\n\t\t\tstart = Date.now();\r\n\t\t}\r\n\r\n\t\twindow.requestAnimationFrame(loop);\r\n\t}\r\n\r\n\tloop();\r\n\r\n\treturn number => {\r\n\t\tif (number) {\r\n\t\t\tdelay = number;\r\n\t\t} else {\r\n\t\t\tcanceled = true;\r\n\t\t}\r\n\t};\r\n}\r\n\r\n/**\r\n * Alternative to `setTimeout`, but using request animation frame\r\n * @param callback Callback that will be executed after delay\r\n * @param delay Delay before executing\r\n */\r\nexport function requestTimeout(callback: () => void, delay: number): () => void {\r\n\tlet start = Date.now();\r\n\tlet canceled = false;\r\n\r\n\tfunction loop() {\r\n\t\tif (canceled) return;\r\n\r\n\t\tlet current = Date.now();\r\n\t\tlet delta = current - start;\r\n\r\n\t\tif (delta >= delay) {\r\n\t\t\tcallback();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\twindow.requestAnimationFrame(loop);\r\n\t}\r\n\r\n\tloop();\r\n\r\n\treturn () => {\r\n\t\tcanceled = true;\r\n\t};\r\n}\r\n\r\n/**\r\n * Add commas to number\r\n * @param number Number to add commas to\r\n */\r\nexport function numberWithCommas(num: number): string {\r\n\treturn num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n}\r\n\r\n/**\r\n * Calculate average value of all numbers\r\n * @param nums Array of number\r\n * @param floor Round returned value\r\n */\r\nexport function average(nums: number[], floor: boolean = true): number {\r\n\tconst result: number = nums.reduce((a, b) => a + b, 0) / nums.length;\r\n\treturn floor ? Math.floor(result) : result;\r\n}\r\n","module.exports={real_news:[{title:\"U.S. Elections!\",content:\"In a week we will know who will be the new president of the United States!\",theme:\"politics\",fake:!1},{title:\"President elected\",content:\"After recent president election, the winner take position\",theme:\"politics\",fake:!1},{title:\"New President rules\",content:\"New Statement from president came out!\",theme:\"politics\",fake:!1},{title:\"Britain post Brexit\",content:\"What has been effected by it?\",theme:\"politics\",fake:!1},{title:\"Migrant stuck in Bosnia\",content:\"What created such incident?\",theme:\"politics\",fake:!1},{title:\"President - Vaccines have arrive!\",content:\"What you should know about them?\",theme:\"politics\",fake:!1},{title:\"Cyberpunk 2077 released!\",content:\"One of the best upcoming games has been finaly released.\",theme:\"gaming\",fake:!1},{title:\"Steam winter sale ends soon\",content:\"Quick grab some game on cheap price!\",theme:\"gaming\",fake:!1},{title:\"Minecraft 2 confirmed!\",content:\"Markus Person confirmed that Minecraft 2 already in development\",theme:\"gaming\",fake:!1},{title:\"New Fallout game to be released!\",content:\"Will franchise rise again after the 76 massive fail?\",theme:\"gaming\",fake:!1},{title:\"Club Penguin 2 in making! \",content:\"Creators confirm, its real!\",theme:\"gaming\",fake:!1},{title:\"New Minecraft update soon.\",content:\"What changes will there be?\",theme:\"gaming\",fake:!1},{title:\"Lil Pump has made new song!\",content:\"The new song is titled Adidas Gang\",theme:\"music\",fake:!1},{title:\"Grammys delayed due Covid-19\",content:\"Due to Covid-19 pandemic, grammy awards are delayed!\",theme:\"music\",fake:!1},{title:\"New James Bond music is top  class.\",content:\"Song titled NO.TIME.TO.DIE brings new light into Jame bond films!.\",theme:\"music\",fake:!1},{title:\"All I want for christmas - best song of generation?\",content:\"Will there ever be end to it?\",theme:\"music\",fake:!1},{title:\"Dr. Dre in Hospital!\",content:\"What happened and should you be woried?\",theme:\"music\",fake:!1},{title:\"New Ed Sheeran album released\",content:\"What now he has to offer?\",theme:\"music\",fake:!1},{title:\"New Avengers movies to come soon!\",content:\"Marvel announced that Avengers cast will return soon\",theme:\"films\",fake:!1},{title:\"New Star Wars movies announced!\",content:\"Will they be as bad as last 3?\",theme:\"films\",fake:!1},{title:\"Petions made to ban Musicals in movies\",content:\"More then 100 000 000 sigantures have been colected\",theme:\"films\",fake:!1},{title:\"New DC movies annouced!\",content:\"Will it ever be as popular as Marvels films?\",theme:\"films\",fake:!1},{title:\"New documentary about WW2, has been released!\",content:\"What new insights to be found?\",theme:\"films\",fake:!1},{title:\"Latvian movie recieves oscar!!\",content:\"Shock? What? How?\",theme:\"films\",fake:!1},{title:\"Scientist found new large Meteor.\",content:\"What can we learn about it?\",theme:\"educational\",fake:!1},{title:\"How to study and concentrate better in School\",content:\"Tip and Tricks!\",theme:\"educational\",fake:!1},{title:\"DIY Hacks for Daily life\",content:\"Top 10 Hacks that you ...\",theme:\"educational\",fake:!1},{title:\"Maximum speed of human?\",content:\"Scientist doing reasearch of how fast can human run.\",theme:\"educational\",fake:!1}],fake_news:[{title:\"Fake\",content:\"FakeNews\",theme:\"FakeNews\",fake:!0},{title:\"Fake\",content:\"FakeNews\",theme:\"FakeNews\",fake:!0},{title:\"Fake\",content:\"FakeNews\",theme:\"FakeNews\",fake:!0},{title:\"Fake\",content:\"FakeNews\",theme:\"FakeNews\",fake:!0},{title:\"Fake\",content:\"FakeNews\",theme:\"FakeNews\",fake:!0},{title:\"Fake\",content:\"FakeNews\",theme:\"FakeNews\",fake:!0},{title:\"Fake\",content:\"FakeNews\",theme:\"FakeNews\",fake:!0},{title:\"Fake\",content:\"FakeNews\",theme:\"FakeNews\",fake:!0},{title:\"Fake\",content:\"FakeNews\",theme:\"FakeNews\",fake:!0},{title:\"Fake\",content:\"FakeNews\",theme:\"FakeNews\",fake:!0},{title:\"Fake\",content:\"FakeNews\",theme:\"FakeNews\",fake:!0},{title:\"Fake\",content:\"FakeNews\",theme:\"FakeNews\",fake:!0},{title:\"Fake\",content:\"FakeNews\",theme:\"FakeNews\",fake:!0},{title:\"Fake\",content:\"FakeNews\",theme:\"FakeNews\",fake:!0},{title:\"Fake\",content:\"FakeNews\",theme:\"FakeNews\",fake:!0},{title:\"Fake\",content:\"FakeNews\",theme:\"FakeNews\",fake:!0},{title:\"Fake\",content:\"FakeNews\",theme:\"FakeNews\",fake:!0},{title:\"Fake\",content:\"FakeNews\",theme:\"FakeNews\",fake:!0},{title:\"Fake\",content:\"FakeNews\",theme:\"FakeNews\",fake:!0},{title:\"Fake\",content:\"FakeNews\",theme:\"FakeNews\",fake:!0},{title:\"Fake\",content:\"FakeNews\",theme:\"FakeNews\",fake:!0},{title:\"Fake\",content:\"FakeNews\",theme:\"FakeNews\",fake:!0},{title:\"Fake\",content:\"FakeNews\",theme:\"FakeNews\",fake:!0},{title:\"Fake\",content:\"FakeNews\",theme:\"FakeNews\",fake:!0}]};","import { State, GameState } from './state';\r\n\r\n// Get game state\r\nconst GAME: GameState = State();\r\n\r\n// On window resize\r\nwindow.addEventListener('resize', () => {\r\n\tGAME.element.width = window.innerWidth * window.devicePixelRatio;\r\n    GAME.element.height = window.innerHeight * window.devicePixelRatio;\r\n});\r\n\r\n// Mouse position calculation\r\nGAME.element.addEventListener('mousemove', event => {\r\n\tconst rect: DOMRect = GAME.element.getBoundingClientRect();\r\n\tGAME.mouseX = ((event.clientX - rect.left) / (rect.right - rect.left)) * GAME.element.width;\r\n\tGAME.mouseY = ((event.clientY - rect.top) / (rect.bottom - rect.top)) * GAME.element.height;\r\n});\r\n\r\n// On mouse down\r\nGAME.element.addEventListener('mousedown', () => {\r\n\tGAME.mouseDown = true;\r\n});\r\n\r\n// On mouse up\r\nGAME.element.addEventListener('mouseup', () => {\r\n\tGAME.mouseDown = false;\r\n});\r\n","import { Player } from './entities/player';\r\nimport { State, GameState } from './state';\r\nimport { requestInterval, numberWithCommas } from './utils';\r\n\r\n// Get state\r\nconst GAME: GameState = State();\r\n\r\n// Elements\r\nconst news = document.getElementById('news');\r\nconst modal = document.getElementById('modal');\r\nconst overlay = document.getElementById('overlay');\r\nconst pauseMenu = document.getElementById('pause-menu');\r\nconst counter = document.getElementById('counter');\r\nconst mood = document.getElementById('mood') as HTMLInputElement;\r\nconst selectedNews = document.getElementById('selected');\r\n\r\n// Buttons\r\nconst gamingButton = document.getElementById('gaming');\r\nconst educationalButton = document.getElementById('educational');\r\nconst politicsButton = document.getElementById('politics');\r\nconst filmsButton = document.getElementById('films');\r\nconst musicButton = document.getElementById('music');\r\nconst sportButton = document.getElementById('sport');\r\nconst postButton = document.getElementById('post') as HTMLButtonElement;\r\nconst relevanceBar = document.getElementById('relevance-bar');\r\n\r\nlet revelanceConst = 0;\r\n\r\nconst moodTable = {\r\n\tmusic: 11,\r\n\tsport: 9,\r\n\tgaming: 7,\r\n\tfilms: 5,\r\n\tpolitics: 3,\r\n\teducational: 1,\r\n}\r\n\r\n\r\n// Update fish counter\r\nrequestInterval(() => {\r\n\tcounter.innerText = numberWithCommas(GAME.fish);\r\n}, 100);\r\n\r\n// Request news block\r\nrequestInterval(() => {\r\n\tif (GAME.paused) return;\r\n\tnextNewsBlock();\r\n}, 2000);\r\n\r\n//Update revelence bar\r\nrequestInterval(() => {\r\n\tlet revelance = Math.floor(GAME.relevance * 50);\r\n\r\n\tif (revelance > 100) revelance = 100; \r\n\r\n\trelevanceBar.style.width = `${revelance}%`;\r\n\r\n\tif (revelance < 30) {\r\n\t\trelevanceBar.style.backgroundColor = '#f35858'\r\n\t} else if (revelance > 70) {\r\n\t\trelevanceBar.style.backgroundColor = '#5ef358'\r\n\t} else {\r\n\t\trelevanceBar.style.backgroundColor = '#5893f3'\r\n\t}\r\n\r\n \r\n\r\n\r\n}, 100);\r\n\r\n// New post creating\r\npostButton.addEventListener('click', () => {\r\n\tcreatePost();\r\n\thideModals();\r\n});\r\n\r\n// Hide modals in overlay click\r\noverlay.addEventListener('click', () => {\r\n\thideModals();\r\n});\r\n\r\n// Pause menu on Escape press\r\nwindow.addEventListener('keydown', event => {\r\n\tif (event.key === 'Escape') {\r\n\t\tif (GAME.paused) {\r\n\t\t\tGAME.paused = false\r\n\t\t\thideModals();\r\n\t\t} else {\r\n\t\t\tGAME.paused = true;\r\n\t\t\tpauseMenu.style.display = 'block';\r\n\t\t\toverlay.style.opacity = '1';\r\n\t\t\toverlay.style.pointerEvents = 'auto';\r\n\t\t}\r\n\t}\r\n});\r\n\r\n//Buttons for the new post thingy\r\ngamingButton.addEventListener('click', () => {\r\n\tunpressButtons();\r\n\tpostButton.disabled = false;\r\n\tgamingButton.classList.contains('active')\r\n\t\t? gamingButton.classList.remove('active')\r\n\t\t: gamingButton.classList.add('active');\r\n});\r\n\r\neducationalButton.addEventListener('click', () => {\r\n\tunpressButtons();\r\n\tpostButton.disabled = false;\r\n\teducationalButton.classList.contains('active')\r\n\t\t? educationalButton.classList.remove('active')\r\n\t\t: educationalButton.classList.add('active');\r\n});\r\n\r\n// Film theme selection\r\nfilmsButton.addEventListener('click', () => {\r\n\tunpressButtons();\r\n\tpostButton.disabled = false;\r\n\tfilmsButton.classList.contains('active')\r\n\t\t? filmsButton.classList.remove('active')\r\n\t\t: filmsButton.classList.add('active');\r\n});\r\n\r\n// Politics theme selection\r\npoliticsButton.addEventListener('click', () => {\r\n\tunpressButtons();\r\n\tpostButton.disabled = false;\r\n\tpoliticsButton.classList.contains('active')\r\n\t\t? politicsButton.classList.remove('active')\r\n\t\t: politicsButton.classList.add('active');\r\n});\r\n\r\n// Music theme selection\r\nmusicButton.addEventListener('click', () => {\r\n\tunpressButtons();\r\n\tpostButton.disabled = false;\r\n\tmusicButton.classList.contains('active')\r\n\t\t? musicButton.classList.remove('active')\r\n\t\t: musicButton.classList.add('active');\r\n});\r\n\r\n// Sports theme selection\r\nsportButton.addEventListener('click', () => {\r\n\tunpressButtons();\r\n\tpostButton.disabled = false;\r\n\tsportButton.classList.contains('active')\r\n\t\t? sportButton.classList.remove('active')\r\n\t\t: sportButton.classList.add('active');\r\n});\r\n\r\n/**\r\n * Unpress all theme buttons \r\n */\r\nfunction unpressButtons(): void {\r\n\tgamingButton.classList.remove('active');\r\n\teducationalButton.classList.remove('active');\r\n\tfilmsButton.classList.remove('active');\r\n\tpoliticsButton.classList.remove('active');\r\n\tmusicButton.classList.remove('active');\r\n\tsportButton.classList.remove('active');\r\n}\r\n\r\n/**\r\n * Create new post\r\n */\r\nfunction createPost(): void {\r\n\tconst index = GAME.selectedNewsIndex;\r\n\tconst current = GAME.news[index];\r\n\r\n\tGAME.started = true;\r\n\r\n\tlet selectedTheme = document.querySelector('button.active');\r\n\tif (selectedTheme === null) return;\r\n\r\n\tconst selectedNewsBlock = news.querySelector(`[news-index=\"${index}\"]`);\r\n\tif (selectedNewsBlock) selectedNewsBlock.classList.add('posted');\r\n\r\n\t// Penguin Animation\r\n\tconst player = GAME.penguins.find(entity => entity.type === 'player') as Player;\r\n\tplayer.state = 'speaking';\r\n\tplayer.speakFrame = 0;\r\n\r\n\t// TODO: Fake news check\r\n\t// TODO: Build this value from multiple factors\r\n\t// TODO: Lower relevance if you choosen incorect theme\r\n\r\n\t//TODO: This is a note, after more then 24 correct answear game started to crash (revelence was 0.1)\r\n\t//Verdict game starts to crash at around 2500 penguins\r\n\r\n\t//Longest game i posted 47 news\r\n\r\n\t//TODO\r\n\r\n\tconst penguins = GAME.started ? GAME.entities.length - 1 : 0;\r\n\r\n\r\n\t//This is the way to go, was able to play the game, it adds dificulty,\r\n\t// but we should tweeak the timers every where so that it would little bit slower but with the same difficulty\r\n\t\r\n\tif (penguins < 100) revelanceConst = 0.1;\r\n\tif (penguins > 100) revelanceConst = 0.15;\r\n\tif (penguins > 400) revelanceConst = 0.2;\r\n\r\n\trevelanceConst = 0.5;\r\n\t\r\n\t// if (penguins < 100) revelanceConst = 0.5;\r\n\t// if (penguins > 400) revelanceConst = 0.3;\r\n\t// if (penguins > 800) revelanceConst = 0.2;\r\n\r\n\t// Fake content check\r\n\tif (current.fake) {\r\n\t\tGAME.relevance -= 0.5;\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst theme = current.theme;\r\n\tconst moodValue: number = parseInt(mood.value);\r\n\r\n\r\n\t// const maxBoundary = moodTable[theme] + 1;\r\n\t// const minBoundary = moodTable[theme] - 1;\r\n\r\n\t// if (moodValue >= minBoundary && moodValue <= maxBoundary) {\r\n\t// \tif (moodValue === moodTable[theme]) revelanceConst = revelanceConst * 1.25;\r\n\t// } else {\r\n\t// \trevelanceConst = revelanceConst * 0.75;\r\n\t// }\r\n\r\n\tconsole.log(revelanceConst);\r\n\r\n\t// If correct theme\r\n\tif (theme === selectedTheme.id) {\r\n\t\tGAME.relevance += revelanceConst;\r\n\t}\r\n}\r\n\r\n/**\r\n * Next news block\r\n */\r\nfunction nextNewsBlock() {\r\n\tconst index = GAME.newsIndex;\r\n\tconst current = GAME.news[index];\r\n\r\n\tconst blockOld = news.querySelector('.old');\r\n\tif (blockOld) blockOld.remove();\r\n\r\n\tconst blockOne = news.querySelector('.block.one');\r\n\tif (blockOne) {\r\n\t\tblockOne.classList.remove('one');\r\n\t\tblockOne.classList.add('old');\r\n\t}\r\n\r\n\tconst blockTwo = news.querySelector('.block.two');\r\n\tif (blockTwo) {\r\n\t\tblockTwo.classList.add('one');\r\n\t\tblockTwo.classList.remove('two');\r\n\t}\r\n\r\n\tconst blockThree = news.querySelector('.block.three');\r\n\tif (blockThree) {\r\n\t\tblockThree.classList.add('two');\r\n\t\tblockThree.classList.remove('three');\r\n\t}\r\n\r\n\t// Create next post\r\n\tconst blockNew = document.createElement('div');\r\n\tblockNew.className = 'block new';\r\n\tblockNew.setAttribute('news-index', `${index}`);\r\n\tconst title = document.createElement('h3');\r\n\ttitle.innerText = current.title;\r\n\tconst content = document.createElement('p');\r\n\tcontent.innerText = current.content;\r\n\r\n\t// Build element\r\n\tblockNew.appendChild(title);\r\n\tblockNew.appendChild(content);\r\n\tnews.appendChild(blockNew);\r\n\r\n\t// Make new block\r\n\tsetTimeout(() => {\r\n\t\tblockNew.className = 'block three';\r\n\t\tblockNew.onclick = () => {\r\n\t\t\tGAME.selectedNewsIndex = index;\r\n\t\t\tshowCreatePostModal();\r\n\t\t};\r\n\t});\r\n\r\n\tGAME.newsIndex += 1;\r\n\tif (GAME.newsIndex >= GAME.news.length) GAME.newsIndex = 0;\r\n}\r\n\r\n/**\r\n * Show post creating modal\r\n */\r\nfunction showCreatePostModal(): void {\r\n\tconst index = GAME.selectedNewsIndex;\r\n\tconst current = GAME.news[index];\r\n\r\n\t// Create post element\r\n\tconst blockNew = document.createElement('div');\r\n\tblockNew.className = 'block new';\r\n\tconst title = document.createElement('h3');\r\n\ttitle.innerText = current.title;\r\n\tconst content = document.createElement('p');\r\n\tcontent.innerText = current.content;\r\n\r\n\tblockNew.appendChild(title);\r\n\tblockNew.appendChild(content);\r\n\r\n\tselectedNews.innerHTML = '';\r\n\tselectedNews.appendChild(blockNew);\r\n\r\n\tpostButton.disabled = true;\r\n\tmodal.style.top = '32px';\r\n\toverlay.style.opacity = '1';\r\n\toverlay.style.pointerEvents = 'auto';\r\n\tGAME.element.style.transform = 'scale(2) translateY(-32px)';\r\n\tGAME.paused = true;\r\n}\r\n\r\n/**\r\n * Hide post creating modal\r\n */\r\nfunction hideModals(): void {\r\n\tpostButton.disabled = true;\r\n\tmodal.style.top = '100%';\r\n\toverlay.style.opacity = '0';\r\n\tpauseMenu.style.display = 'none';\r\n\toverlay.style.pointerEvents = 'none';\r\n\tGAME.element.style.transform = 'scale(1)';\r\n\tGAME.paused = false;\r\n\tunpressButtons();\r\n}\r\n","// stats.js - http://github.com/mrdoob/stats.js\n(function(f,e){\"object\"===typeof exports&&\"undefined\"!==typeof module?module.exports=e():\"function\"===typeof define&&define.amd?define(e):f.Stats=e()})(this,function(){var f=function(){function e(a){c.appendChild(a.dom);return a}function u(a){for(var d=0;d<c.children.length;d++)c.children[d].style.display=d===a?\"block\":\"none\";l=a}var l=0,c=document.createElement(\"div\");c.style.cssText=\"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";c.addEventListener(\"click\",function(a){a.preventDefault();\nu(++l%c.children.length)},!1);var k=(performance||Date).now(),g=k,a=0,r=e(new f.Panel(\"FPS\",\"#0ff\",\"#002\")),h=e(new f.Panel(\"MS\",\"#0f0\",\"#020\"));if(self.performance&&self.performance.memory)var t=e(new f.Panel(\"MB\",\"#f08\",\"#201\"));u(0);return{REVISION:16,dom:c,addPanel:e,showPanel:u,begin:function(){k=(performance||Date).now()},end:function(){a++;var c=(performance||Date).now();h.update(c-k,200);if(c>g+1E3&&(r.update(1E3*a/(c-g),100),g=c,a=0,t)){var d=performance.memory;t.update(d.usedJSHeapSize/\n1048576,d.jsHeapSizeLimit/1048576)}return c},update:function(){k=this.end()},domElement:c,setMode:u}};f.Panel=function(e,f,l){var c=Infinity,k=0,g=Math.round,a=g(window.devicePixelRatio||1),r=80*a,h=48*a,t=3*a,v=2*a,d=3*a,m=15*a,n=74*a,p=30*a,q=document.createElement(\"canvas\");q.width=r;q.height=h;q.style.cssText=\"width:80px;height:48px\";var b=q.getContext(\"2d\");b.font=\"bold \"+9*a+\"px Helvetica,Arial,sans-serif\";b.textBaseline=\"top\";b.fillStyle=l;b.fillRect(0,0,r,h);b.fillStyle=f;b.fillText(e,t,v);\nb.fillRect(d,m,n,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d,m,n,p);return{dom:q,update:function(h,w){c=Math.min(c,h);k=Math.max(k,h);b.fillStyle=l;b.globalAlpha=1;b.fillRect(0,0,r,m);b.fillStyle=f;b.fillText(g(h)+\" \"+e+\" (\"+g(c)+\"-\"+g(k)+\")\",t,v);b.drawImage(q,d+a,m,n-a,p,d,m,n-a,p);b.fillRect(d+n-a,m,a,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d+n-a,m,a,g((1-h/w)*p))}}};return f});\n","import { State, GameState } from '../state';\r\nimport { convertRange, loadImage, numberWithCommas, lerp, requestTimeout } from '../utils';\r\n\r\n// Sprites\r\nimport fishImage from '../../sprites/fish-shadow.png';\r\n\r\n// Preload images\r\nconst fish = loadImage(fishImage);\r\n\r\n// Global game state\r\nconst GAME: GameState = State();\r\n\r\n// Element\r\nconst fishCounter = document.getElementById('fish');\r\n\r\nexport class Fish {\r\n    public readonly type = 'fish';\r\n    public readonly spriteHeight = 92;\r\n\tpublic readonly spriteWidth = 92;\r\n\r\n    public collected: boolean;\r\n\r\n    public exists: boolean;\r\n    public frame: number;\r\n    \r\n    public y: number;\r\n    public x: number;\r\n\r\n    public width: number;\r\n    public height: number;\r\n\r\n    public spawnY: number;\r\n\r\n    /**\r\n     * Billboard initialization\r\n     */\r\n    constructor(x: number, y: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.spawnY = y;\r\n        this.frame = 0;\r\n        this.exists = true;\r\n        this.width = this.spriteWidth;\r\n        this.height = this.spriteHeight;\r\n        this.collected = false;\r\n\r\n        if (this.x < 128) this.x = 128;\r\n        if (this.x > GAME.element.width - 128) this.x = GAME.element.width - 128;\r\n\r\n    }\r\n\r\n    /**\r\n     * Draw sprite on canvas\r\n     */\r\n    public draw(): void {\r\n        const ctx = GAME.ctx;\r\n\r\n        if (this.exists === false) return;\r\n\r\n        const size = convertRange(this.spawnY, { min: 0, max: GAME.element.height }, { min: 0, max: 2 });\r\n        const posY: number = convertRange(this.y, { min: 0, max: GAME.element.height }, { min: GAME.element.height / 5, max: GAME.element.height });\r\n\r\n        ctx.save();\r\n        ctx.translate(this.x, posY);\r\n        ctx.scale(size, size);\r\n\t\tctx.drawImage(fish, -(this.width / 2), -(this.height / 2), this.width, this.height);\r\n        ctx.restore();\r\n    }\r\n\r\n    /**\r\n     * Update billboard state\r\n     */\r\n    public update(): void {\r\n        if (this.exists === false) return;\r\n\r\n        // Next frame\r\n        this.frame += 1;\r\n\r\n        // If not collected\r\n        if (!this.collected) {\r\n            // Spawn animation\r\n            if (this.frame < 50) {\r\n                const posY: number = convertRange(this.spawnY - 512, { min: 0, max: GAME.element.height }, { min: GAME.element.height / 5, max: GAME.element.height });\r\n                this.y = lerp(this.y, posY, 0.05);\r\n            }\r\n\r\n            // Despawn\r\n            if (this.frame > 200) {\r\n                this.width = lerp(this.width, 0, 0.2); \r\n                this.height = lerp(this.height, 0, 0.2); \r\n                if (this.width < 16) this.exists = false;\r\n                return\r\n            }\r\n\r\n            // Check mouse collision\r\n            if (GAME.mouseX <= (this.x + 64) && GAME.mouseX >= (this.x - 64)) {\r\n                this.collected = true;\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n\r\n        // Size animation\r\n        if (this.y < 64) {\r\n            this.width = lerp(this.width, 0, 0.1); \r\n            this.height = lerp(this.height, 0, 0.1); \r\n        }\r\n\r\n        // Change position\r\n        const posX = GAME.element.width / 2;\r\n        const posY = 0 - (GAME.element.height / 5);\r\n        this.x = lerp(this.x, posX, 0.1); \r\n        this.y = lerp(this.y, posY, 0.1); \r\n\r\n\r\n        if (this.width < 16) {\r\n            this.exists = false;\r\n            GAME.fish += 1;\r\n\r\n            // Counter animation\r\n            fishCounter.className = 'added';\r\n            setTimeout(() => {\r\n                fishCounter.className = '';\r\n            }, 50);\r\n        }\r\n    }\r\n}","import { Fish } from './fish';  \r\n\r\nimport { State, GameState } from '../state';\r\nimport { convertRange, lerp, loadImage, randomInteger } from '../utils';\r\nimport { Speach } from './speach';\r\n\r\n// Sprites\r\nimport spriteLeft from '../../sprites/penguin-left.png';\r\nimport spriteRight from '../../sprites/penguin-right.png';\r\nimport speachBubbleImage from '../../sprites/speech_bubble.png';\r\n\r\n// Preload images\r\nconst penguinLeft = loadImage(spriteLeft);\r\nconst penguinRight = loadImage(spriteRight);\r\nconst speackBubble = loadImage(speachBubbleImage);\r\n\r\n// Global game state\r\nconst GAME: GameState = State();\r\n\r\nexport class Penguin {\r\n\tpublic readonly type = 'penguin';\r\n\tpublic readonly spriteHeight = 92;\r\n\tpublic readonly spriteWidth = 92;\r\n\r\n\tpublic involvement: number;\r\n\tpublic exists: boolean;\r\n\t\r\n\tpublic state: 'spawning' | 'walking' | 'leaving' | 'speaking';\r\n\tpublic direction: 'left' | 'right';\r\n\tpublic message: string = '';\r\n\r\n\tpublic spawnFrame: number;\r\n\tpublic frame: number;\r\n\tpublic x: number;\r\n\tpublic y: number;\r\n\r\n\tpublic width: number;\r\n\tpublic height: number;\r\n\r\n\tconstructor(x: number, y: number) {\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\r\n\t\tthis.state = 'spawning';\r\n\t\tthis.frame = randomInteger(0, 20);\r\n\t\tthis.direction = randomInteger(0, 1) ? 'left' : 'right';\r\n\r\n\t\tthis.width = this.spriteWidth / 2;\r\n\t\tthis.height = 0;\r\n\t\tthis.exists = true;\r\n\t\tthis.involvement = randomInteger(75, 125);\r\n\t\tthis.spawnFrame = randomInteger(0, 200);\r\n\t}\r\n\r\n\t/**\r\n\t * Draw penguin\r\n\t */\r\n\tpublic draw(): void {\r\n\t\tconst ctx = GAME.ctx;\r\n\r\n\t\tif (!GAME.started) return;\r\n\r\n\t\t// Remove if its unmounted\r\n\t\tif (!this.exists) return;\r\n\r\n\t\tconst sprite = this.direction === 'left' ? penguinLeft : penguinRight;\r\n\t\tconst size = convertRange(this.y, { min: 0, max: GAME.element.height }, { min: 0, max: 2 });\r\n\t\tconst posY = convertRange(this.y, { min: 0, max: GAME.element.height }, { min: GAME.element.height / 5, max: GAME.element.height });\r\n\r\n\t\t// Skip drawing if its reversed\r\n\t\tif (size < 0) return;\r\n\r\n\t\tctx.save();\r\n\t\tctx.translate(this.x, posY);\r\n\t\tctx.scale(size, size);\r\n\t\tctx.drawImage(sprite, -(this.width / 2), -this.height + 18, this.width, this.height);\r\n\t\tctx.restore();\r\n\t}\r\n\r\n\t/**\r\n\t * Update penguin state\r\n\t */\r\n\tpublic update(): void {\r\n\t\tconst width: number = GAME.element.width;\r\n\t\tconst height: number = GAME.element.height;\r\n\r\n\t\tif (!GAME.started) return;\r\n\r\n\t\t// Remove if its unmounted\r\n\t\tif (!this.exists) return;\r\n\r\n\t\t// Lower involvement\r\n\t\tthis.involvement -= 0.05;\r\n\r\n\t\t// Lower involvement one more time\r\n\t\tif (GAME.relevance <= 0.5) this.involvement -= 0.05;\r\n\t\tif (GAME.relevance >= 1) this.involvement += 0.02;\r\n\r\n\t\t// If penguin is not involved\r\n\t\tif (this.involvement <= 0) this.state = 'leaving';\r\n\r\n\t\t// Spawn fish\r\n\t\tif (this.spawnFrame === 300 && this.state === 'walking') {\r\n\t\t\tconst fish = new Fish(this.x, this.y - 1);\r\n\t\t\tGAME.entities.push(fish);\r\n\t\t}\r\n\r\n\t\t// Update frame\r\n\t\tthis.frame += 1;\r\n\t\tif (this.frame > 20) this.frame = 0;\r\n\r\n\t\t// Update spawn frame\r\n\t\tthis.spawnFrame += 1;\r\n\t\tif (this.spawnFrame > 300) this.spawnFrame = 0;\r\n\r\n\t\t// Speaking penguin\r\n\t\tif (this.state === 'speaking') {\r\n\t\t\tthis.frame += 0.5;\r\n\t\t\tthis.height = this.frame >= 10 ? lerp(this.height, this.spriteHeight - 16, 0.2) : lerp(this.height, this.spriteHeight + 16, 0.2);\r\n\t\t\tthis.width = this.frame >= 10 ? lerp(this.width, this.spriteWidth + 8, 0.2) : lerp(this.width, this.spriteWidth, 0.2);\r\n\t\t}\r\n\r\n\t\t// If walking\r\n\t\tif (this.state === 'walking') {\r\n\t\t\tthis.height = this.frame >= 10 ? lerp(this.height, this.spriteHeight - 24, 0.3) : lerp(this.height, this.spriteHeight + 4, 0.3);\r\n\t\t\tthis.width = this.frame >= 10 ? lerp(this.width, this.spriteWidth + 16, 0.2) : lerp(this.width, this.spriteWidth - 4, 0.2);\r\n\r\n\t\t\tif (this.direction === 'left') {\r\n\t\t\t\tthis.x -= convertRange(this.y, { min: 0, max: height }, { min: 0, max: 2 });\r\n\t\t\t\tif (this.x <= -this.width) this.x = width + this.width;\r\n\t\t\t} else {\r\n\t\t\t\tthis.x += convertRange(this.y, { min: 0, max: height }, { min: 0, max: 2 });\r\n\t\t\t\tif (this.x >= width + this.width) this.x = -this.width;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Spawning penguin\r\n\t\tif (this.state === 'spawning') {\r\n\t\t\tthis.width = lerp(this.width, this.spriteWidth, 0.1);\r\n\t\t\tthis.height = lerp(this.height, this.spriteHeight, 0.1) + 0.1;\r\n\t\t\tif (this.height >= this.spriteHeight) {\r\n\t\t\t\tthis.state = 'walking';\r\n\t\t\t\tthis.width = this.spriteWidth;\r\n\t\t\t\tthis.height = this.spriteHeight;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Removing penguin\r\n\t\tif (this.state === 'leaving') {\r\n\t\t\tthis.width = lerp(this.width, 0, 0.05);\r\n\t\t\tthis.height = lerp(this.height, 0, 0.1) - 0.05;\r\n\t\t\tif (this.height <= 10) this.exists = false;\r\n\t\t}\r\n\t}\r\n}\r\n","import { State, GameState } from '../state';\r\nimport { convertRange, loadImage, lerp } from '../utils';\r\n\r\n// Sprites\r\nimport stoneImage from '../../sprites/stone.png';\r\nimport mainPenguinImage from '../../sprites/main-penguin.png';\r\nimport mainPenguinLoudspeakerImage from '../../sprites/main-penguin-loudspeaker.png';\r\n\r\n// Preload images\r\nconst stone = loadImage(stoneImage);\r\nconst mainPenguin = loadImage(mainPenguinImage);\r\nconst mainPenguinLoudspeaker = loadImage(mainPenguinLoudspeakerImage);\r\n\r\n// Global game state\r\nconst GAME: GameState = State();\r\n\r\nexport class Player {\r\n    public readonly type = 'player';\r\n\tpublic readonly stoneSpriteHeight = 200;\r\n    public readonly stoneSpriteWidth = 400;\r\n    public readonly penguinSpriteHeight = 120;\r\n    public readonly penguinSpriteWidth = 120;\r\n    public readonly penguinOffsetX = 48;\r\n    public readonly penguinOffsetY = -60;\r\n\r\n    public state: 'idle' | 'speaking';\r\n    public frame: number;\r\n    public speakFrame: number;\r\n\r\n    public exists: boolean;\r\n    public x: number;\r\n    public y: number;\r\n    public width: number;\r\n    public height: number;\r\n\r\n    /**\r\n     * Player initialization\r\n     */\r\n    constructor() {\r\n        this.x = GAME.element.width / 2;\r\n        this.y = GAME.element.height / 1.75;\r\n        this.width = this.penguinSpriteWidth;\r\n        this.height = this.penguinSpriteHeight;\r\n        this.exists = true;\r\n        this.frame = 0;\r\n        this.speakFrame = 0;\r\n        this.state = 'idle';\r\n    }\r\n\r\n    /**\r\n     * Draw sprite on canvas\r\n     */\r\n    public draw(): void {\r\n        const ctx = GAME.ctx;\r\n\r\n        const size = convertRange(this.y, { min: 0, max: GAME.element.height }, { min: 0, max: 2 });\r\n        const posY = convertRange(this.y, { min: 0, max: GAME.element.height }, { min: GAME.element.height / 5, max: GAME.element.height });\r\n        const sprite = this.state === 'speaking' ? mainPenguinLoudspeaker : mainPenguin;\r\n\r\n        ctx.save();\r\n        ctx.translate(this.x, posY);\r\n        ctx.scale(size, size);\r\n        ctx.drawImage(stone, -(this.stoneSpriteWidth / 2), -this.stoneSpriteHeight + 48, this.stoneSpriteWidth, this.stoneSpriteHeight);\r\n        ctx.drawImage(sprite, -(this.width / 2) + this.penguinOffsetX, -(this.height + 16) + this.penguinOffsetY, this.width, this.height);\r\n        ctx.restore();\r\n    }\r\n\r\n    /**\r\n     * Update player state\r\n     */\r\n    public update(): void {\r\n        this.x = Math.floor(GAME.element.width / 2);\r\n        this.y = Math.floor(GAME.element.height / 1.75);\r\n\r\n        // Frame update\r\n        this.frame += 1;\r\n        if (this.frame > 100) {\r\n            this.frame = 0;\r\n        }\r\n\r\n        // Idle state\r\n        if (this.state === 'idle') {\r\n            if (this.frame > 50) {\r\n                this.height = lerp(this.height, this.penguinSpriteHeight, 0.05);\r\n                this.width = lerp(this.width, this.penguinSpriteWidth, 0.05);\r\n            } else {\r\n                this.height = lerp(this.height, this.penguinSpriteHeight - 16, 0.05);\r\n                this.width = lerp(this.width, this.penguinSpriteWidth + 8, 0.05);\r\n            }\r\n        }\r\n\r\n        // Speaking animation\r\n        if (this.state === 'speaking') {\r\n            this.frame += 8;\r\n            this.speakFrame += 1;\r\n\r\n            if (this.frame > 50) {\r\n                this.height = lerp(this.height, this.penguinSpriteHeight + 16, 0.1);\r\n                this.width = lerp(this.width, this.penguinSpriteWidth - 8, 0.1);\r\n            } else {\r\n                this.height = lerp(this.height, this.penguinSpriteHeight - 32, 0.1);\r\n                this.width = lerp(this.width, this.penguinSpriteWidth + 16, 0.1);\r\n            }           \r\n        }\r\n\r\n        // Stop speaking after some frames  \r\n        if (this.speakFrame > 150) {\r\n            this.speakFrame = 0;\r\n            this.state = 'idle';\r\n        }   \r\n    }\r\n}","import Stats from 'stats.js';\r\nimport { State, GameState } from './state';\r\nimport { randomInteger, randomFromArray, requestInterval, convertRange, insertionSort } from './utils';\r\n\r\n// Entities\r\nimport { Penguin } from './entities/penguin';\r\nimport { Player } from './entities/player';\r\n\r\n// Stats setup\r\nconst stats = new Stats();\r\nstats.showPanel(0);\r\nif (process.env.NODE_ENV === 'development') document.body.appendChild(stats.dom);\r\n\r\n// Get state\r\nconst GAME: GameState = State();\r\n\r\n// Spawn penguins\r\nfor (let i = 0; i < 20; i++) {\r\n\tconst x = randomInteger(0, GAME.element.width);\r\n\tconst y = randomInteger(GAME.element.height / 3, GAME.element.height - 64);\r\n\tconst penguin = new Penguin(x, y);\r\n\tGAME.penguins.push(penguin);\r\n}\r\n\r\n// Spawn main penguin player\r\nconst player = new Player();\r\nGAME.penguins.push(player);\r\n\r\n// Sort entities\r\ninsertionSort(GAME.penguins, 'y');\r\n\r\n// Main loop\r\nfunction loop() {\r\n\t// If game paused\r\n\tif (GAME.paused) {\r\n\t\twindow.requestAnimationFrame(loop);\r\n\t\treturn;\r\n\t}\r\n\r\n\tstats.begin();\r\n\r\n\t// Update entities\r\n\tfor (let i = 0; i < GAME.penguins.length; i++) GAME.penguins[i].update();\r\n\tfor (let i = 0; i < GAME.entities.length; i++) GAME.entities[i].update();\r\n\r\n\t// Remove all deleted entities\r\n\tGAME.penguins = GAME.penguins.filter(entity => entity.exists);\r\n\tGAME.entities = GAME.entities.filter(entity => entity.exists);\r\n\r\n\t// Clean screen\r\n\tGAME.ctx.clearRect(0, 0, GAME.element.width, GAME.element.height);\r\n\r\n\t// Draw entities\r\n\tfor (let i = 0; i < GAME.penguins.length; i++) GAME.penguins[i].draw();\r\n\tfor (let i = 0; i < GAME.entities.length; i++) GAME.entities[i].draw();\r\n\r\n\tconsole.log(GAME.penguins.length);\r\n\r\n\r\n\tstats.end();\r\n\twindow.requestAnimationFrame(loop);\r\n}\r\n\r\nconst overlay = document.getElementById('overlay');\r\noverlay.style.opacity = '1';\r\n\r\ndocument.getElementById('start-button').onclick = () => {\r\n\tloop();\r\n\tGAME.paused = false;\r\n\toverlay.style.opacity = '0';\r\n\tdocument.getElementById('start-menu').remove();\r\n};\r\n\r\n","import { Penguin } from './entities/penguin';\r\nimport { State, GameState } from './state';\r\nimport { randomInteger, requestInterval, average, requestTimeout, insertionSort } from './utils';\r\n\r\n// Get state\r\nconst GAME: GameState = State();\r\n\r\n\r\n\r\n\r\n// // Speedup timer\r\n// let newsUpdateTime = 10000;\r\n// requestInterval(() => {\r\n// \tif (newsUpdateTime <= 5000) return;\r\n\r\n// \tnewsUpdateTime -= 500;\r\n// \tnewsInterval(newsUpdateTime);\r\n// }, 20000);\r\n\r\n// Relevance update\r\nrequestInterval(() => {\r\n\tif (GAME.paused) return;\r\n\tif (!GAME.started) return;\r\n\r\n\tGAME.relevance -= 0.03;\r\n\tif (GAME.relevance > 1.2) GAME.relevance -= 0.02;\r\n\t\r\n\tif (GAME.relevance < 0) GAME.relevance = 0;\r\n\tif (GAME.relevance > 2) GAME.relevance = 2;\r\n\r\n\r\n}, 1000);\r\n\r\n// TODO: Optimize Penguins view, increase penguins number without creating more entities\r\n\r\n// Spawn penguins\r\nrequestInterval(() => {\r\n\tif (GAME.paused) return;\r\n\tif (!GAME.started) return;\r\n\r\n\tconst spawnCoefficent = 5;\r\n\tconst penguinMultiplier = GAME.entities.length / spawnCoefficent;\r\n\r\n\tlet toSpawn = Math.floor(penguinMultiplier * GAME.relevance) - penguinMultiplier;\r\n\tif (GAME.relevance > 1) toSpawn += 1;\r\n\r\n\tfor (let i = 0; i < toSpawn; i++) {\r\n\t\tconst x = randomInteger(0, GAME.element.width);\r\n\t\tconst y = randomInteger(GAME.element.height / 3, GAME.element.height - 64);\r\n\t\tconst penguin = new Penguin(x, y);\r\n\t\tGAME.penguins.push(penguin);\t\t\r\n\t}\r\n\r\n\tinsertionSort(GAME.penguins, 'y');\r\n}, 1000);\r\n","import { State } from './core/state';\r\nimport { shuffle } from './core/utils';\r\n\r\n// Array of news\r\nimport { real_news, fake_news } from './content.json';\r\n\r\n// Setup canvas element\r\nconst stage = document.getElementById('stage') as HTMLCanvasElement;\r\nstage.width = window.innerWidth * window.devicePixelRatio;\r\nstage.height = window.innerHeight * window.devicePixelRatio;\r\n\r\n// Setup canvas context\r\nconst ctx = stage.getContext('2d');\r\n\r\n// State initialization\r\nState({\r\n\tpaused: true,\r\n\telement: stage,\r\n\tctx: ctx,\r\n\r\n\tmouseX: 0,\r\n\tmouseY: 0,\r\n\tmouseDown: false,\r\n\r\n\tentities: [],\r\n\tpenguins: [],\r\n\tstarted: false,\r\n\tfish: 0,\r\n\trelevance: 1,\r\n\t\r\n\tnews: shuffle([...real_news, ...fake_news]),\r\n\tnewsIndex: 0,\r\n\tselectedNewsIndex: 0,\r\n});\r\n\r\n// Input module\r\nimport './core/input';\r\n\r\n// Game UI\r\nimport './core/gui';\r\n\r\n// Main game code\r\nimport './core/main';\r\n\r\n// Game logic timers\r\nimport './core/timers';\r\n"]}